name: Build

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@clippy
      - run: cargo clippy --workspace --tests -- -Dclippy::all

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --tests --verbose

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup

      - name: Test with Miri
        env:
          MIRIFLAGS: -Zmiri-backtrace=full
        run: |
          cargo miri test --tests
          cd examples/sample
          cargo miri run

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: dtolnay/install@cargo-outdated
      - run: cargo outdated --workspace --exit-code 1

  doc:
    name: Rustdoc
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Check documentation links
        uses: actions-rs/cargo@v1
        with:
          command: rustdoc
          args: -- -D warnings
