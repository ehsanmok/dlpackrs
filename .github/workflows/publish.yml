name: Publish

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces

      - name: Install Node (for changelog generation)
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

        shell: bash
        run: |
          # Check if we can skip releasing a new version
          # (there are no changes and the job was not manually triggered)
          export CHANGED=$(cargo workspaces changed --include-merged-tags --ignore-changes "**/Cargo.toml")
          if [[ -z "$CHANGED" && "$GITHUB_EVENT_NAME" != "workflow_dispatch" ]]; then
            # Nothing has changed, so don't publish a new version
            echo "No changes detected, skipping publish."
            exit 0
          fi
          # Update version
          git config --global user.email "runner@gha.local"
          git config --global user.name "Github Action"
          cargo workspaces -v version -y --force '*' --include-merged-tags --no-git-commit --exact patch
          export VERSION=$(cargo pkgid | sed -E 's/.*#(.*)/\1/g')
          # Update changelog
          npm install -g auto-changelog@2.2.1
          auto-changelog --output CHANGELOG.md \
                         --starting-version v0.1.0 \
                         --latest-version "$VERSION" \
                         --merge-pattern 'Auto merge of #(\d+) - .+\n\n(.+)' \
                         --template changelog-template.hbs
          # Commit and publish
          git commit -am "Release $VERSION"
          git tag "v$VERSION"
          cargo workspaces -v publish --from-git --allow-dirty --skip-published
          git push --tags
          cargo workspaces -v version -y --force '*' --include-merged-tags --no-git-tag --pre-id dev preminor
